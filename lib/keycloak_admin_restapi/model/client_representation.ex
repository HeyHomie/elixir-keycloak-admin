# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule KeycloakAdminRESTAPI.Model.ClientRepresentation do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :"access",
    :"adminUrl",
    :"alwaysDisplayInConsole",
    :"attributes",
    :"authenticationFlowBindingOverrides",
    :"authorizationServicesEnabled",
    :"authorizationSettings",
    :"baseUrl",
    :"bearerOnly",
    :"clientAuthenticatorType",
    :"clientId",
    :"consentRequired",
    :"defaultClientScopes",
    :"description",
    :"directAccessGrantsEnabled",
    :"enabled",
    :"frontchannelLogout",
    :"fullScopeAllowed",
    :"id",
    :"implicitFlowEnabled",
    :"name",
    :"nodeReRegistrationTimeout",
    :"notBefore",
    :"oauth2DeviceAuthorizationGrantEnabled",
    :"optionalClientScopes",
    :"origin",
    :"protocol",
    :"protocolMappers",
    :"publicClient",
    :"redirectUris",
    :"registeredNodes",
    :"registrationAccessToken",
    :"rootUrl",
    :"secret",
    :"serviceAccountsEnabled",
    :"standardFlowEnabled",
    :"surrogateAuthRequired",
    :"webOrigins"
  ]

  @type t :: %__MODULE__{
    :"access" => %{optional(String.t) => map()} | nil,
    :"adminUrl" => String.t | nil,
    :"alwaysDisplayInConsole" => boolean() | nil,
    :"attributes" => %{optional(String.t) => map()} | nil,
    :"authenticationFlowBindingOverrides" => %{optional(String.t) => map()} | nil,
    :"authorizationServicesEnabled" => boolean() | nil,
    :"authorizationSettings" => KeycloakAdminRESTAPI.Model.ResourceServerRepresentation.t | nil,
    :"baseUrl" => String.t | nil,
    :"bearerOnly" => boolean() | nil,
    :"clientAuthenticatorType" => String.t | nil,
    :"clientId" => String.t | nil,
    :"consentRequired" => boolean() | nil,
    :"defaultClientScopes" => [String.t] | nil,
    :"description" => String.t | nil,
    :"directAccessGrantsEnabled" => boolean() | nil,
    :"enabled" => boolean() | nil,
    :"frontchannelLogout" => boolean() | nil,
    :"fullScopeAllowed" => boolean() | nil,
    :"id" => String.t | nil,
    :"implicitFlowEnabled" => boolean() | nil,
    :"name" => String.t | nil,
    :"nodeReRegistrationTimeout" => integer() | nil,
    :"notBefore" => integer() | nil,
    :"oauth2DeviceAuthorizationGrantEnabled" => boolean() | nil,
    :"optionalClientScopes" => [String.t] | nil,
    :"origin" => String.t | nil,
    :"protocol" => String.t | nil,
    :"protocolMappers" => [KeycloakAdminRESTAPI.Model.ProtocolMapperRepresentation.t] | nil,
    :"publicClient" => boolean() | nil,
    :"redirectUris" => [String.t] | nil,
    :"registeredNodes" => %{optional(String.t) => map()} | nil,
    :"registrationAccessToken" => String.t | nil,
    :"rootUrl" => String.t | nil,
    :"secret" => String.t | nil,
    :"serviceAccountsEnabled" => boolean() | nil,
    :"standardFlowEnabled" => boolean() | nil,
    :"surrogateAuthRequired" => boolean() | nil,
    :"webOrigins" => [String.t] | nil
  }
end

defimpl Poison.Decoder, for: KeycloakAdminRESTAPI.Model.ClientRepresentation do
  import KeycloakAdminRESTAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"authorizationSettings", :struct, KeycloakAdminRESTAPI.Model.ResourceServerRepresentation, options)
    |> deserialize(:"protocolMappers", :list, KeycloakAdminRESTAPI.Model.ProtocolMapperRepresentation, options)
  end
end

